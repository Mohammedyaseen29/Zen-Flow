// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id        String @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  flows     Flow[]
  createdAt DateTime @default(now())
  accounts  Account[]
  sessions  Session[]
  @@index([email])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user              User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Flow{
  id            String   @id @default(uuid())
  name          String?   @default("Untitled Flow")
  description   String?
  active        Boolean  @default(true) 
  userId        String
  user          User     @relation(fields: [userId],references: [id])
  triggerId     String
  trigger       Trigger?
  action        Actions[]
  flowState     FlowState[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Trigger{
  id           String             @id @default(uuid())
  metadata     Json               @default("{}")
  flowId       String             @unique
  flow         Flow               @relation(fields: [flowId],references: [id])
  triggerId    String
  type         AvailableTriggers   @relation(fields: [triggerId],references: [id])

  @@index([flowId])
  @@index([triggerId])
}

model Actions{
  id            String             @id  @default(uuid())
  metaData      Json               @default("{}")
  flowId        String
  flow          Flow                @relation(fields: [flowId],references: [id])
  actionId      String
  type          AvailableActions    @relation(fields: [actionId],references: [id])


  @@index([flowId])
  @@index([actionId])
}

model AvailableTriggers{
  id          String          @id        @default(uuid())
  name        String
  image       String?
  fields      Json           @default("[]")
  triggers    Trigger[]
}

model AvailableActions{
  id        String          @id         @default(uuid())
  name      String
  image     String?
  fields    Json           @default("[]")
  actions   Actions[]
}

model FlowState{
  id                  String      @id      @default(uuid())
  flowId              String
  flow                Flow        @relation(fields: [flowId],references: [id])
  status              String      @default("pending")
  startedAt           DateTime    @default(now())
  completedAt         DateTime?
  metaData            Json
  flowStateOutBox     FlowStateOutBox?
  @@index([flowId])
}

model FlowStateOutBox{
  id            String        @id       @default(uuid())
  flowStateId   String        @unique
  flowState     FlowState     @relation(fields: [flowStateId],references: [id])
}


